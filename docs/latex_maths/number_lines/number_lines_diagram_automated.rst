====================================================
Number Lines - automated
====================================================

| The LaTeX in this section is for one number line diagram.
| The values in the diagram can be randomly generated by python.

----

A number line diagram with answers
--------------------------------------------

.. grid:: 2
   :gutter: 0
   :margin: 0
   :padding: 0

   .. grid-item-card::  

      nl_plus_q
      ^^^
      :download:`png<diagrams/nl_plus_q.png>`
      :download:`pdf<diagrams/nl_plus_q.pdf>`
      :download:`tex<diagrams/nl_plus_q.tex>`


      .. figure:: diagrams/nl_plus_q.png
         :width: 600
         :alt: nl_plus_q
         :figclass: align-center

   .. grid-item-card::  
      
      nl_plus_ans
      ^^^
      :download:`png<diagrams/nl_plus_ans.png>`
      :download:`pdf<diagrams/nl_plus_ans.pdf>`
      :download:`tex<diagrams/nl_plus_ans.tex>`

      .. figure:: diagrams/nl_plus_ans.png
         :width: 600
         :alt: nl_plus_ans
         :figclass: align-center


   .. grid-item-card::  

      nl_minus_neg_q
      ^^^
      :download:`png<diagrams/nl_minus_neg_q.png>`
      :download:`pdf<diagrams/nl_minus_neg_q.pdf>`
      :download:`tex<diagrams/nl_minus_neg_q.tex>`


      .. figure:: diagrams/nl_minus_neg_q.png
         :width: 600
         :alt: nl_minus_neg_q
         :figclass: align-center

   .. grid-item-card::  
      
      nl_minus_neg_ans
      ^^^
      :download:`png<diagrams/nl_minus_neg_ans.png>`
      :download:`pdf<diagrams/nl_minus_neg_ans.pdf>`
      :download:`tex<diagrams/nl_minus_neg_ans.tex>`

      .. figure:: diagrams/nl_minus_neg_ans.png
         :width: 600
         :alt: nl_minus_neg_ans
         :figclass: align-center

   .. grid-item-card::  

      nl_minus_q
      ^^^
      :download:`png<diagrams/nl_minus_q.png>`
      :download:`pdf<diagrams/nl_minus_q.pdf>`
      :download:`tex<diagrams/nl_minus_q.tex>`


      .. figure:: diagrams/nl_minus_q.png
         :width: 600
         :alt: nl_minus_q
         :figclass: align-center

   .. grid-item-card::  
      
      nl_minus_ans
      ^^^
      :download:`png<diagrams/nl_minus_ans.png>`
      :download:`pdf<diagrams/nl_minus_ans.pdf>`
      :download:`tex<diagrams/nl_minus_ans.tex>`

      .. figure:: diagrams/nl_minus_ans.png
         :width: 600
         :alt: nl_minus_ans
         :figclass: align-center

   .. grid-item-card::  

      nl_minus_pos_q
      ^^^
      :download:`png<diagrams/nl_minus_pos_q.png>`
      :download:`pdf<diagrams/nl_minus_pos_q.pdf>`
      :download:`tex<diagrams/nl_minus_pos_q.tex>`


      .. figure:: diagrams/nl_minus_pos_q.png
         :width: 600
         :alt: nl_minus_pos_q
         :figclass: align-center

   .. grid-item-card::  
      
      nl_minus_pos_ans
      ^^^
      :download:`png<diagrams/nl_minus_pos_ans.png>`
      :download:`pdf<diagrams/nl_minus_pos_ans.pdf>`
      :download:`tex<diagrams/nl_minus_pos_ans.tex>`

      .. figure:: diagrams/nl_minus_pos_ans.png
         :width: 600
         :alt: nl_minus_pos_ans
         :figclass: align-center

   .. grid-item-card::  

      nl_plus_neg_q
      ^^^
      :download:`png<diagrams/nl_plus_neg_q.png>`
      :download:`pdf<diagrams/nl_plus_neg_q.pdf>`
      :download:`tex<diagrams/nl_plus_neg_q.tex>`


      .. figure:: diagrams/nl_plus_neg_q.png
         :width: 600
         :alt: nl_plus_neg_q
         :figclass: align-center

   .. grid-item-card::  
      
      nl_plus_neg_ans
      ^^^
      :download:`png<diagrams/nl_plus_neg_ans.png>`
      :download:`pdf<diagrams/nl_plus_neg_ans.pdf>`
      :download:`tex<diagrams/nl_plus_neg_ans.tex>`

      .. figure:: diagrams/nl_plus_neg_ans.png
         :width: 600
         :alt: nl_plus_neg_ans
         :figclass: align-center

   .. grid-item-card::  

      nl_random_q
      ^^^
      :download:`png<diagrams/nl_random_q.png>`
      :download:`pdf<diagrams/nl_random_q.pdf>`
      :download:`tex<diagrams/nl_random_q.tex>`


      .. figure:: diagrams/nl_random_q.png
         :width: 600
         :alt: nl_random_q
         :figclass: align-center

   .. grid-item-card::  
      
      nl_random_ans
      ^^^
      :download:`png<diagrams/nl_random_ans.png>`
      :download:`pdf<diagrams/nl_random_ans.pdf>`
      :download:`tex<diagrams/nl_random_ans.tex>`

      .. figure:: diagrams/nl_random_ans.png
         :width: 600
         :alt: nl_random_ans
         :figclass: align-center


----

Splitting the LaTeX and modifying it to be built by python
----------------------------------------------------------------

| The LaTeX from a single number lines equation is used as a starting point, split into 2 and modified.
| The document template contains the preamble and the scaffold for the document.
| The Diagram template contains the backtacking diagram LaTeX.

document template
~~~~~~~~~~~~~~~~~~~~

| The LaTeX number lines worksheet template is below.
| :download:`document_template<makers/number_lines_template.tex>`

.. literalinclude:: makers/number_lines_template.tex
   :linenos:

| ``<<diagram>>`` is placeholder text for the text that python will use to add the LaTeX for the number line diagram.

diagram template
~~~~~~~~~~~~~~~~~~~~

| The LaTeX number line diagram template is below.
| :download:`diagram_template<makers/number_lines_diagram_template.tex>`

.. literalinclude:: makers/number_lines_diagram_template.tex
   :linenos:

| The line ``\draw[shift={(<<startval>>,-0.8)},color=black] node[font=\large,text height=12pt] {$<<startvaltxt>>$};`` has a placeholder ``<<startval>>`` which is replaced by python.
| Other placeholders are tagged by ``<<   >>``.

Python to create a number line diagram
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

| The Python to create a number line diagram is below.

| This Python code is a script that generates a PDF file and PNG file with a number line diagram based on some random parameters. Here is an outline of the code:

- It opens three template files for creating a tex file with a number line diagram and reads their contents.
- It calls a function called ``make1_diagram`` that takes the diagram template text as an argument and returns two strings: one for the question and one for the answer. The function calls the ``btf.get_1step_process_dict`` function to get a dictionary with some keys and values for creating the diagram. The function then replaces the placeholders in the template text with the corresponding values from the dictionary, depending on whether it is for the answer or question version. The function uses a loop to iterate over the keys and values of the dictionary and perform the replacement.
- It replaces a placeholder in the LaTeX template texts with the diagram texts and writes them to two output files: one for the question and one for the answer.
- It waits for two seconds and then calls another function called ``convert_to_pdf`` that takes the output tex files and converts them to PDF files using the ``pdfLaTeX`` command.
- It waits for another second and then calls another function called ``convert_pdf_to_png`` from the ``magick_pdf_to_png`` module that takes the output PDF files and converts them to PNG files using the ``magick`` command.
- It prints "starting" before calling the main function and "finished" after it.

| Further details:

- The code imports the modules ``pathlib``, ``subprocess``, ``time``, ``random``, and the file in the currectn directory ``magick_pdf_to_png``.
- The code defines the paths for the template and output files using the ``Path`` class from ``pathlib``.
- The code defines the function called ``btf.get_1step_process_dict`` that returns a dictionary with some keys and values for creating the number line diagram. The function uses a random integer to choose one of five possible cases, each corresponding to a different style of adding or subtracting numbers on the number line. The function calls another helper function called ``val_in_list_exclude_zero`` that returns a random integer from a range excluding zero.
- The code defines the function called ``go_right_dict`` that takes an argument called ``add_style`` and returns a dictionary with some keys and values for creating a number line diagram where the arrow goes to the right. The function sets the end value, start value, and change value based on the argument and uses some formatting to display them as text.
- The code defines a function called ``go_left_dict`` that takes an argument called ``sub_style`` and returns a dictionary with some keys and values for creating a number line diagram where the arrow goes to the left. The function sets the end value, start value, and change value based on the argument and uses some formatting to display them as text.
- The code defines two lists called ``kv_keys_ans`` and ``kv_keys_q`` that contain the keys of the dictionary that are relevant for the answer and question versions of the diagram, respectively.
- The code defines the function called ``trimkey`` that takes a key and removes the ``_q`` suffix if it has one.


:download:`number_lines_diagram_maker<makers/number_lines_diagram_maker.py>`

.. literalinclude:: makers/number_lines_diagram_maker.py
   :linenos:


